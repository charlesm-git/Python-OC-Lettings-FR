name: CI/CD Pipeline

on: [push]

jobs:
  test-and-linting:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.0

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run tests with coverage check
    - name: Run tests and check coverage
      run: |
        pytest --cov=./
        coverage report --fail-under=80

    # Step 5: Run flake8 linting
    - name: Lint with flake8
      run: |
        flake8 --count --statistics


  build-and-push-docker-image:
    runs-on: ubuntu-latest

    needs: test-and-linting
    if: github.ref == 'refs/heads/master'
      
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build Docker Image
        run: |
          docker build -t ${{secrets.DOCKER_USERNAME}}/oc-lettings-site:${{github.sha}} .
          docker tag ${{secrets.DOCKER_USERNAME}}/oc-lettings-site:${{github.sha}} ${{secrets.DOCKER_USERNAME}}/oc-lettings-site:latest
        
      - name: Push Docker Image
        run: |
          docker push ${{secrets.DOCKER_USERNAME}}/oc-lettings-site:${{github.sha}}
          docker push ${{secrets.DOCKER_USERNAME}}/oc-lettings-site:latest
  
  deployment:
    runs-on: ubuntu-latest

    needs: build-and-push-docker-image
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deployment on Render
        run: |
          curl --fail --request POST \
               --url https://api.render.com/v1/services/${{secrets.RENDER_SERVICE_ID}}/deploys \
               --header 'accept: application/json' --header 'authorization: Bearer ${{secrets.RENDER_API_KEY}}' \
               --header 'content-type: application/json' \
               --data '{"clearCache": "do_not_clear"}'
